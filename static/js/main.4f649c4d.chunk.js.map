{"version":3,"sources":["components/Container/Container.styled.js","components/Container/Container.jsx","components/Form/ContactsForm.styled.js","components/Form/ContactsForm.jsx","components/Contacts/ContactsList.styled.js","components/Contacts/ContactsList.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","App.jsx","index.js"],"names":["StyledWrapper","Container","children","Form","Input","Label","Button","ContactsForm","onSubmit","useState","name","setName","number","setNumber","handleChange","event","target","value","nameInputId","nanoid","telInputId","preventDefault","htmlFor","id","type","placeholder","pattern","title","onChange","required","propTypes","PropTypes","string","isRequired","func","Contacts","Item","ContactsList","contacts","onDeleteClick","map","size","color","onClick","Wrapper","Title","Section","Filter","filter","App","setContacts","setFilter","useEffect","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","filtered","normalizeFilter","toLowerCase","contact","includes","filteredContacts","newContact","some","alert","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAEO,IAAMA,EAAa,sN,OCCbC,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,OAAO,cAACF,EAAD,UAAgBE,K,uBCFlB,IAAMC,EAAI,uGAKJC,EAAK,8CAELC,EAAK,uFAILC,EAAM,6YCRZ,SAASC,EAAT,GAAqC,IAAbC,EAAY,EAAZA,SAC7B,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAe,SAACC,GACpB,MAAwBA,EAAMC,OAAtBN,EAAR,EAAQA,KAAMO,EAAd,EAAcA,MAEd,OAAQP,GACN,IAAK,OACHC,EAAQM,GACR,MACF,IAAK,SACHJ,EAAUI,GACV,MAEF,QACE,SAaFC,EAAcC,YAAO,GACrBC,EAAaD,YAAO,GAExB,OACE,eAAChB,EAAD,CAAMK,SAba,SAACO,GACpBA,EAAMM,iBAENb,EAAS,CAAEE,OAAME,WAEjBD,EAAQ,IACRE,EAAU,KAOV,UACE,cAACR,EAAD,CAAOiB,QAAO,aAAQJ,GAAtB,kBACA,cAACd,EAAD,CACEmB,GAAE,aAAQL,GACVM,KAAK,OACLd,KAAK,OACLe,YAAY,OACZC,QAAQ,yHACRC,MAAM,kcACNV,MAAOP,EACPkB,SAAUd,EACVe,UAAQ,IAGV,cAACxB,EAAD,CAAOiB,QAAO,aAAQF,GAAtB,oBACA,cAAChB,EAAD,CACEmB,GAAE,aAAQH,GACVI,KAAK,MACLd,KAAK,SACLe,YAAY,sBACZC,QAAQ,yFACRC,MAAM,giBACNV,MAAOL,EACPgB,SAAUd,EACVe,UAAQ,IAGV,cAACvB,EAAD,CAAQkB,KAAK,SAAb,4BASNpB,EAAM0B,UAAY,CAChBP,GAAIQ,IAAUC,OAAOC,WACrBhB,MAAOc,IAAUC,OAAOC,WACxBL,SAAUG,IAAUG,KAAKD,YC3EpB,IAAME,EAAQ,gFAIRC,EAAI,iWA0BJ9B,EAAM,0Z,gBC3BN+B,EAAe,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cACvC,OACE,cAACJ,EAAD,UACGG,EAASE,KAAI,YAA2B,IAAxBjB,EAAuB,EAAvBA,GAAIb,EAAmB,EAAnBA,KAAME,EAAa,EAAbA,OACzB,OACE,eAACwB,EAAD,WACE,iCACE,cAAC,IAAD,CAAUK,KAAM,GAAIC,MAAM,cACzBhC,EAFH,OAKA,iCACE,cAAC,IAAD,CAAS+B,KAAM,GAAIC,MAAM,cACxB9B,KAEH,cAAC,EAAD,CAAQY,KAAK,SAASmB,QAAS,kBAAMJ,EAAchB,IAAnD,sBAVSA,SAyBrBjB,EAAOwB,UAAY,CACjBa,QAASZ,IAAUG,KAAKD,YClCnB,IAAMW,EAAO,yLASPC,EAAK,sPCRLC,EAAU,SAAC,GAAyB,IAAvBnB,EAAsB,EAAtBA,MAAOzB,EAAe,EAAfA,SAC/B,OACE,eAAC0C,EAAD,WACE,cAACC,EAAD,UAAQlB,IACPzB,MCLA,IAAMG,EAAK,sHAMLD,EAAK,8CCJL2C,EAAS,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,OAAQpB,EAAe,EAAfA,SAC/B,OACE,qCACE,cAAC,EAAD,CAAON,QAAO,aAAQH,YAAO,IAA7B,mCACA,cAAC,EAAD,CACEI,GAAE,aAAQJ,YAAO,IACjBK,KAAK,OACLd,KAAK,OACLO,MAAO+B,EACPpB,SAAUA,EACVH,YAAY,eCPL,SAASwB,IACtB,MAAgCxC,mBAAS,CACvC,CAAEc,GAAI,OAAQb,KAAM,gBAAiBE,OAAQ,aAC7C,CAAEW,GAAI,OAAQb,KAAM,iBAAkBE,OAAQ,aAC9C,CAAEW,GAAI,OAAQb,KAAM,gBAAiBE,OAAQ,aAC7C,CAAEW,GAAI,OAAQb,KAAM,iBAAkBE,OAAQ,eAJhD,mBAAO0B,EAAP,KAAiBY,EAAjB,KAOA,EAA4BzC,mBAAS,IAArC,mBAAOuC,EAAP,KAAeG,EAAf,KAEAC,qBAAU,WACR,IAAMd,EAAWe,aAAaC,QAAQ,YAChCC,EAAiBC,KAAKC,MAAMnB,GAE9BiB,GACFL,EAAYK,KAEb,IAEHH,qBAAU,WACRC,aAAaK,QAAQ,WAAYF,KAAKG,UAAUrB,MAC/C,CAACA,IAEJ,IAwBMsB,EAVmB,WACvB,IAAMC,EAAkBb,EAAOc,cAE/B,OAAOxB,EAASU,QACd,SAACe,GAAD,OACEA,EAAQrD,KAAKoD,cAAcE,SAASH,IACpCE,EAAQnD,OAAOoD,SAASH,MAIbI,GAEjB,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAStC,MAAM,YAAf,SACE,cAACpB,EAAD,CAAcC,SA7BD,SAAC0D,GAClB5B,EAAS6B,MAAK,qBAAGzD,OAAoBwD,EAAWxD,QAC5C0D,MAAM,WAAD,OAAYF,EAAWxD,KAAvB,oBACLwC,EAAY,CAACgB,GAAF,mBAAiB5B,UA6B9B,eAAC,EAAD,CAASX,MAAM,WAAf,UACE,cAAC,EAAD,CAAQV,MAAO+B,EAAQpB,SArBF,SAACb,GAAD,OAAWoC,EAAUpC,EAAMC,OAAOC,UAsBvD,cAAC,EAAD,CAAcqB,SAAUsB,EAAUrB,cA5BlB,SAAC8B,GACrBnB,GAAY,SAACZ,GAAD,OACVA,EAASU,QAAO,SAACe,GAAD,OAAaA,EAAQxC,KAAO8C,iBCjClDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACvB,EAAD,MAEFwB,SAASC,eAAe,W","file":"static/js/main.4f649c4d.chunk.js","sourcesContent":["import styled from \"@emotion/styled/macro\";\n\nexport const StyledWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 0 auto;\n  padding: 30px;\n  background-color: #ffffff;\n  border-radius: 5px;\n  border: 5px solid lightsteelblue;\n  width: 600px;\n`;\n","import PropTypes from \"prop-types\";\nimport { StyledWrapper } from \"./Container.styled\";\n\nexport const Container = ({ children }) => {\n  return <StyledWrapper>{children}</StyledWrapper>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import styled from \"@emotion/styled/macro\";\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Input = styled.input``;\n\nexport const Label = styled.label`\n  margin-bottom: 10px;\n`;\n\nexport const Button = styled.button`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  min-width: 100px;\n  padding: 10px 12px;\n  margin-top: 15px;\n\n  font-size: 14px;\n  font-weight: 700;\n  color: #fff;\n  background-color: steelblue;\n  border: 1px solid transparent;\n  border-radius: 5px;\n  cursor: pointer;\n  text-transform: capitalize;\n\n  &:hover,\n  &:focus {\n    box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.5);\n  }\n`;\n","import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { nanoid } from \"nanoid\";\nimport { Form, Input, Label, Button } from \"./ContactsForm.styled\";\n\nexport function ContactsForm({ onSubmit }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    onSubmit({ name, number });\n\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  let nameInputId = nanoid(3);\n  let telInputId = nanoid(3);\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label htmlFor={`id-${nameInputId}`}>Name</Label>\n      <Input\n        id={`id-${nameInputId}`}\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        value={name}\n        onChange={handleChange}\n        required\n      />\n\n      <Label htmlFor={`id-${telInputId}`}>Number</Label>\n      <Input\n        id={`id-${telInputId}`}\n        type=\"tel\"\n        name=\"number\"\n        placeholder=\"+38 (XXX) XXX-XX-XX\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        value={number}\n        onChange={handleChange}\n        required\n      />\n\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n}\n\nContactsForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nInput.propTypes = {\n  id: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};","import styled from \"@emotion/styled/macro\";\n\nexport const Contacts = styled.ul`\n  margin-top: 20px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  padding: 10px;\n  border: 1px solid silver;\n  overflow: hidden;\n  border-radius: 5px;\n\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n\n  & span {\n    display: inline-flex;\n    align-items: center;\n    margin-left: 10px;\n    margin-right: 40px;\n  }\n\n  & svg {\n    margin-right: 5px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  min-width: 100px;\n  padding: 10px;\n  margin-left: 10px;\n  margin-right: 10px;\n\n  font-size: 14px;\n  font-weight: 700;\n  color: #fff;\n  background-color: steelblue;\n  border: 1px solid transparent;\n  border-radius: 5px;\n  cursor: pointer;\n  text-transform: capitalize;\n\n  &:hover,\n  &:focus {\n    box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.5);\n  }\n`;\n","import PropTypes from \"prop-types\";\nimport { Contacts, Item, Button } from \"./ContactsList.styled\";\nimport { IoPerson } from \"react-icons/io5\";\nimport { ImPhone } from \"react-icons/im\";\n\nexport const ContactsList = ({ contacts, onDeleteClick }) => {\n  return (\n    <Contacts>\n      {contacts.map(({ id, name, number }) => {\n        return (\n          <Item key={id}>\n            <span>\n              <IoPerson size={14} color=\"steelblue\" />\n              {name}:\n            </span>\n\n            <span>\n              <ImPhone size={14} color=\"steelblue\" />\n              {number}\n            </span>\n            <Button type=\"button\" onClick={() => onDeleteClick(id)}>\n              Delete\n            </Button>\n          </Item>\n        );\n      })}\n    </Contacts>\n  );\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)).isRequired,\n  onDeleteClick: PropTypes.func.isRequired,\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import styled from \"@emotion/styled/macro\";\n\nexport const Wrapper = styled.section`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n  padding-top: 30px;\n  padding-bottom: 30px;\n`;\n\nexport const Title = styled.h2`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 20px;\n\n  text-transform: uppercase;\n  font-size: 28px;\n  font-weight: 700;\n  color: steelblue;\n`;\n","import PropTypes from \"prop-types\";\nimport { Wrapper, Title } from \"./Section.styled\";\n\nexport const Section = ({ title, children }) => {\n  return (\n    <Wrapper>\n      <Title>{title}</Title>\n      {children}\n    </Wrapper>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import styled from \"@emotion/styled/macro\";\n\nexport const Label = styled.label`\n  margin-bottom: 10px;\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const Input = styled.input``;\n","import PropTypes from \"prop-types\";\nimport { nanoid } from \"nanoid\";\nimport { Label, Input } from \"./Filter.styled\";\n\nexport const Filter = ({ filter, onChange }) => {\n  return (\n    <>\n      <Label htmlFor={`id-${nanoid(3)}`}>Find contacts by name</Label>\n      <Input\n        id={`id-${nanoid(3)}`}\n        type=\"text\"\n        name=\"name\"\n        value={filter}\n        onChange={onChange}\n        placeholder=\"Search\"\n      />\n    </>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from \"react\";\nimport { Container } from \"components/Container/Container\";\nimport { ContactsForm } from \"components/Form/ContactsForm\";\nimport { ContactsList } from \"components/Contacts/ContactsList\";\nimport { Section } from \"components/Section/Section\";\nimport { Filter } from \"components/Filter/Filter\";\n\nexport default function App() {\n  const [contacts, setContacts] = useState([\n    { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n    { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n    { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n    { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n  ]);\n\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      setContacts(parsedContacts);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = (newContact) => {\n    contacts.some(({ name }) => name === newContact.name)\n      ? alert(`Contact ${newContact.name} already exists`)\n      : setContacts([newContact, ...contacts]);\n  };\n\n  const deleteContact = (contactId) => {\n    setContacts((contacts) =>\n      contacts.filter((contact) => contact.id !== contactId)\n    );\n  };\n\n  const handleFilterChange = (event) => setFilter(event.target.value);\n\n  const filteredContacts = () => {\n    const normalizeFilter = filter.toLowerCase();\n\n    return contacts.filter(\n      (contact) =>\n        contact.name.toLowerCase().includes(normalizeFilter) ||\n        contact.number.includes(normalizeFilter)\n    );\n  };\n\n  const filtered = filteredContacts();\n\n  return (\n    <Container>\n      <Section title=\"Phonebook\">\n        <ContactsForm onSubmit={addContact} />\n      </Section>\n\n      <Section title=\"Contacts\">\n        <Filter value={filter} onChange={handleFilterChange} />\n        <ContactsList contacts={filtered} onDeleteClick={deleteContact} />\n      </Section>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}